{"ast":null,"code":"import { cartActions } from \"./product-slice\";\nexport const loadProducts = () => {\n  return async dispatch => {\n    const fetchProducts = async () => {\n      const response = await fetch(\"http://localhost:8080/events\");\n      if (!response.ok) {\n        throw new Error(\"Could not fetch products data!\");\n      }\n      const products = await response.json();\n      return products;\n    };\n    try {\n      const productData = await fetchProducts();\n      dispatch(cartActions.loadProducts(productData.events));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const setProduct = id => {\n  return async dispatch => {\n    const fetchProduct = async () => {\n      const response = await fetch(`http://localhost:8080/events/${id}`);\n      if (!response) {\n        throw new Error(\"Could not fetch product details\");\n      }\n      const product = await response.json();\n      return product;\n    };\n    try {\n      const productData = await fetchProduct();\n      dispatch(cartActions.setProduct(productData.event));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const createProduct = product => {\n  return dispatch => {\n    const fetchProduct = async () => {\n      const response = await fetch(`http://localhost:8080/events`, {\n        method: 'POST',\n        body: JSON.stringify(product)\n      });\n      if (!response) {\n        throw new Error(\"Could not save product!\");\n      }\n    };\n  };\n};","map":{"version":3,"names":["cartActions","loadProducts","dispatch","fetchProducts","response","fetch","ok","Error","products","json","productData","events","error","console","log","setProduct","id","fetchProduct","product","event","createProduct","method","body","JSON","stringify"],"sources":["C:/Users/Algometric/Desktop/React/Project practice/frontend/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./product-slice\";\r\n\r\nexport const loadProducts = () => {\r\n  return async (dispatch) => {\r\n    const fetchProducts = async () => {\r\n      const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch products data!\");\r\n      }\r\n\r\n      const products = await response.json();\r\n      return products;\r\n    };\r\n\r\n    try {\r\n      const productData = await fetchProducts();\r\n      dispatch(cartActions.loadProducts(productData.events));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const setProduct = (id) => {\r\n  return async(dispatch) => {\r\n    const fetchProduct = async () => {\r\n      const response = await fetch(`http://localhost:8080/events/${id}`);\r\n       \r\n      if(!response) {\r\n        throw new Error(\"Could not fetch product details\");\r\n      }\r\n      const product = await response.json();\r\n      return product;\r\n    };\r\n\r\n    try {\r\n      const productData = await fetchProduct();\r\n      dispatch(cartActions.setProduct(productData.event));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\nexport const createProduct = (product) => {\r\n  return (dispatch) => {\r\n    const fetchProduct = async () => {\r\n      const response = await fetch(`http://localhost:8080/events`, {method: 'POST', body: JSON.stringify(product)});\r\n       \r\n      if(!response) {\r\n        throw new Error(\"Could not save product!\");\r\n      }\r\n    };\r\n\r\n  \r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,iBAAiB;AAE7C,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACnD;MAEA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACtC,OAAOD,QAAQ;IACjB,CAAC;IAED,IAAI;MACF,MAAME,WAAW,GAAG,MAAMP,aAAa,CAAC,CAAC;MACzCD,QAAQ,CAACF,WAAW,CAACC,YAAY,CAACS,WAAW,CAACC,MAAM,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,UAAU,GAAIC,EAAE,IAAK;EAChC,OAAO,MAAMd,QAAQ,IAAK;IACxB,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BW,EAAG,EAAC,CAAC;MAElE,IAAG,CAACZ,QAAQ,EAAE;QACZ,MAAM,IAAIG,KAAK,CAAC,iCAAiC,CAAC;MACpD;MACA,MAAMW,OAAO,GAAG,MAAMd,QAAQ,CAACK,IAAI,CAAC,CAAC;MACrC,OAAOS,OAAO;IAChB,CAAC;IAED,IAAI;MACF,MAAMR,WAAW,GAAG,MAAMO,YAAY,CAAC,CAAC;MACxCf,QAAQ,CAACF,WAAW,CAACe,UAAU,CAACL,WAAW,CAACS,KAAK,CAAC,CAAC;IACrD,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAMQ,aAAa,GAAIF,OAAO,IAAK;EACxC,OAAQhB,QAAQ,IAAK;IACnB,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA6B,EAAE;QAACgB,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO;MAAC,CAAC,CAAC;MAE7G,IAAG,CAACd,QAAQ,EAAE;QACZ,MAAM,IAAIG,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACF,CAAC;EAGH,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}